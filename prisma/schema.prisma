generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  user_id    Int       @id @default(autoincrement())
  pseudo     String    @unique @db.VarChar(255)
  first_name String    @db.VarChar(255)
  last_name  String    @db.VarChar(255)
  email      String    @unique @db.VarChar(255)
  password   String    @db.VarChar(255)
  birthday   DateTime  @db.Date
  gender     String    @db.VarChar(50)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  last_auth  DateTime? @db.Timestamp(6)
  sales      sale[]
  purchases  purchase[]
  stocks     stock[]
}

model product {
  product_id     Int      @id @default(autoincrement())
  name           String   @db.VarChar(255)
  description    String?  @db.Text
  price          Decimal  @db.Decimal(10, 2)
  stock_quantity Int     @default(0)
  created_at     DateTime @default(now()) @db.Timestamp(6)
  updated_at     DateTime @updatedAt @db.Timestamp(6)
  sales          sale[]
  purchases      purchase[]
  stocks         stock[]
}

model sale {
  sale_id      Int      @id @default(autoincrement())
  product_id   Int
  quantity     Int
  sale_date    DateTime @default(now()) @db.Timestamp(6)
  product      product  @relation(fields: [product_id], references: [product_id])
  user         user     @relation(fields: [user_id], references: [user_id])
  user_id      Int
}

model purchase {
  purchase_id  Int      @id @default(autoincrement())
  product_id   Int
  quantity     Int
  purchase_date DateTime @default(now()) @db.Timestamp(6)
  product      product  @relation(fields: [product_id], references: [product_id])
  user         user     @relation(fields: [user_id], references: [user_id])
  user_id      Int
}

model stock {
  stock_id     Int      @id @default(autoincrement())
  product_id   Int
  quantity     Int
  movement_date DateTime @default(now()) @db.Timestamp(6)
  product      product  @relation(fields: [product_id], references: [product_id])
  user         user     @relation(fields: [user_id], references: [user_id])
  user_id      Int
}
